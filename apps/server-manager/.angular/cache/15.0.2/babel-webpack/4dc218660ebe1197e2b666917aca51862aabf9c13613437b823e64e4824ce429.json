{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./state/gql\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./node/node.component\";\nfunction AppComponent_app_node_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-node\", 2);\n  }\n  if (rf & 2) {\n    const node_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"node\", node_r1);\n  }\n}\nexport class AppComponent {\n  constructor(getNodes, getGames, watch) {\n    this.getNodes = getNodes;\n    this.getGames = getGames;\n    this.watch = watch;\n    this.title = 'server-manager';\n    this.nodes$ = this.getNodes.watch({}).valueChanges.pipe(map(result => result.data.nodes));\n    this.games$ = this.getNodes.watch({}).valueChanges.pipe(map(result => result.data.nodes));\n    console.log(\"graou\");\n    this.watch.watch({}, {\n      pollInterval: 5000\n    }).valueChanges.subscribe();\n  }\n  onModuleInit() {\n    console.log(\"issous\", this.nodes$);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.GetNodesGQL), i0.ɵɵdirectiveInject(i1.GetGamesGQL), i0.ɵɵdirectiveInject(i1.WatchStatusChangeGQL));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"nodes\"], [3, \"node\", 4, \"ngFor\", \"ngForOf\"], [3, \"node\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n        i0.ɵɵtemplate(2, AppComponent_app_node_2_Template, 1, 1, \"app-node\", 1);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx.nodes$));\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterOutlet, i4.NodeComponent, i2.AsyncPipe],\n    styles: [\".nodes[_ngcontent-%COMP%] {\\n  display: flex;\\n  height: 15vh;\\n  padding: 16px 8px;\\n  overflow: scroll;\\n}\\n.nodes[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  display: none;\\n}\\n/*# sourceURL=webpack://./front/app/app.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2Zyb250L2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDRjtBQUNFO0VBQ0UsYUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm5vZGVzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgaGVpZ2h0OiAxNXZoO1xuICBwYWRkaW5nOiAxNnB4IDhweDtcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcbn1cbi5ub2Rlczo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICBkaXNwbGF5OiBub25lO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;;;;;;;;ICCtBC,8BACW;;;;IADDA,8BAAa;;;ADO3B,OAAM,MAAOC,YAAY;EAcvBC,YACqBC,QAAqB,EACrBC,QAAqB,EACrBC,KAA2B;IAF3B,aAAQ,GAARF,QAAQ;IACR,aAAQ,GAARC,QAAQ;IACR,UAAK,GAALC,KAAK;IAhB1B,UAAK,GAAG,gBAAgB;IAER,WAAM,GAAG,IAAI,CAACF,QAAQ,CACnCE,KAAK,CAAC,EAAE,CAAC,CACTC,YAAY,CACZC,IAAI,CAACR,GAAG,CAAES,MAAM,IAAKA,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC;IAG3B,WAAM,GAAG,IAAI,CAACP,QAAQ,CACnCE,KAAK,CAAC,EAAE,CAAC,CACTC,YAAY,CACZC,IAAI,CAACR,GAAG,CAAES,MAAM,IAAKA,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC;IAOzCC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,CAACP,KAAK,CAACA,KAAK,CAAC,EAAE,EAAE;MAAEQ,YAAY,EAAE;IAAI,CAAE,CAAC,CAACP,YAAY,CAACQ,SAAS,EAAE;EACvE;EAEAC,YAAY;IACVJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACI,MAAM,CAAC;EAEpC;EAAC;qBA1BUf,YAAY;EAAA;EAAA;UAAZA,YAAY;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVzBrB,2BAAK;QAGDA,uEACW;;QACbA,iBAAM;QAENA,gCAA+B;QACjCA,iBAAM;;;QALuCA,eAAiB;QAAjBA,0DAAiB","names":["map","i0","AppComponent","constructor","getNodes","getGames","watch","valueChanges","pipe","result","data","nodes","console","log","pollInterval","subscribe","onModuleInit","nodes$","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/david/perso/home-api/apps/server-manager/front/app/app.component.ts","/home/david/perso/home-api/apps/server-manager/front/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { OnModuleInit } from '@nestjs/common';\nimport { map } from 'rxjs';\nimport { GetGamesGQL, GetNodesGQL, WatchStatusChangeGQL } from './state/gql';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnModuleInit {\n  title = 'server-manager';\n\n  public readonly nodes$ = this.getNodes\n    .watch({})\n    .valueChanges\n    .pipe(map((result) => result.data.nodes));\n\n\n  public readonly games$ = this.getNodes\n    .watch({})\n    .valueChanges\n    .pipe(map((result) => result.data.nodes));\n\n  constructor(\n    protected readonly getNodes: GetNodesGQL,\n    protected readonly getGames: GetGamesGQL,\n    protected readonly watch: WatchStatusChangeGQL\n  ) {\n    console.log(\"graou\")\n    this.watch.watch({}, { pollInterval: 5000 }).valueChanges.subscribe()\n  }\n\n  onModuleInit() {\n    console.log(\"issous\", this.nodes$)\n\n  }\n}\n","<div>\n\n  <div class=\"nodes\">\n    <app-node [node]=\"node\" *ngFor=\"let node of nodes$ | async\">\n    </app-node>\n  </div>\n\n  <router-outlet></router-outlet>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}