{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./state/gql\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nexport class AppComponent {\n  constructor(getNodes) {\n    this.getNodes = getNodes;\n    this.title = 'server-manager';\n    this.nodes = this.getNodes.watch({}, {\n      pollInterval: 3000\n    }).valueChanges.pipe(map(result => result.data));\n    console.log(\"graou\");\n  }\n  onModuleInit() {\n    console.log(\"issous\", this.nodes);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.GetNodesGQL));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 4,\n    vars: 3,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"json\");\n        i0.ɵɵelement(3, \"router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx.nodes), \" \");\n      }\n    },\n    dependencies: [i2.RouterOutlet, i3.JsonPipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;;;;;AAQ1B,OAAM,MAAOC,YAAY;EAQvBC,YACqBC,QAAqB;IAArB,aAAQ,GAARA,QAAQ;IAR7B,UAAK,GAAG,gBAAgB;IAER,UAAK,GAAG,IAAI,CAACA,QAAQ,CAClCC,KAAK,CAAC,EAAE,EAAE;MAACC,YAAY,EAAE;IAAI,CAAC,CAAC,CAC/BC,YAAY,CACZC,IAAI,CAACP,GAAG,CAAEQ,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC;IAKnCC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB;EAEAC,YAAY;IACVF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACE,KAAK,CAAC;EACnC;EAAC;qBAhBUZ,YAAY;EAAA;EAAA;UAAZA,YAAY;IAAAa;IAAAC;IAAAC;IAAAC;MAAA;QCVzBC,2BAAK;QAEHA,YACA;;QAGAA,gCAA+B;QACjCA,iBAAM;;;QALJA,eACA;QADAA,gEACA","names":["map","AppComponent","constructor","getNodes","watch","pollInterval","valueChanges","pipe","result","data","console","log","onModuleInit","nodes","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/david/perso/home-api/apps/server-manager/front/app/app.component.ts","/home/david/perso/home-api/apps/server-manager/front/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { OnModuleInit } from '@nestjs/common';\nimport { map } from 'rxjs';\nimport { GetNodesGQL } from './state/gql';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnModuleInit {\n  title = 'server-manager';\n\n  public readonly nodes = this.getNodes\n    .watch({}, {pollInterval: 3000})\n    .valueChanges\n    .pipe(map((result) => result.data));\n\n  constructor(\n    protected readonly getNodes: GetNodesGQL\n  ) {\n    console.log(\"graou\")\n  }\n\n  onModuleInit() {\n    console.log(\"issous\", this.nodes)\n  }\n}\n","<div>\n\n  {{ nodes | json }}\n  <!-- <div *ngFor=\"let node of (nodes | async)\">\n  </div> -->\n\n  <router-outlet></router-outlet>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}